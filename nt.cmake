cmake_minimum_required(VERSION 3.29)

set(CMAKE_SYSTEM_NAME Generic)

set(CMAKE_SYSTEM_VERSION 6.9)

set(CMAKE_SYSTEM_PROCESSOR AMD64)
set(CLANG_ARCH x86_64-msvc-windows)
set(ARCH_DEFS "-D_AMD64_ -D_WIN64")
if (NOT "${CMAKE_HOST_SYSTEM_NAME}" MATCHES "Windows")
    set(NT_WINE_MASM TRUE)
    set(CMAKE_ASM_MASM_COMPILER ${CMAKE_SOURCE_DIR}/tools/masm.sh)
else()
    set(CMAKE_ASM_MASM_COMPILER ${CMAKE_SOURCE_DIR}/tools/ml64.exe)
endif()

if (DEFINED NT_MSVC OR "${CMAKE_GENERATOR}" MATCHES "Visual Studio")
    set(CMAKE_C_COMPILER cl)
    set(CMAKE_CXX_COMPILER cl)
else()
    set(CMAKE_C_COMPILER clang-cl)
    set(CMAKE_CXX_COMPILER clang-cl)
endif()

set(CMAKE_C_FLAGS_INIT "${ARCHDEFS} -Zl -GS- -Os")
set(CMAKE_CXX_FLAGS_INIT "${ARCHDEFS} -Zl -GS- -Os")

if ("${CMAKE_C_COMPILER}" STREQUAL "clang-cl")
    set(CMAKE_C_FLAGS_INIT "${CMAKE_C_FLAGS_INIT} -fms-compatibility -fms-extensions --target=${CLANG_ARCH} ${ARCH_DEFS} -Xclang -ffreestanding")
    set(CMAKE_CXX_FLAGS_INIT ${CMAKE_CXX_FLAGS_INIT} "-fms-compatibility -fms-extensions --target=${CLANG_ARCH} ${ARCH_DEFS} -Xclang -ffreestanding")
else()
    set(CMAKE_C_FLAGS_INIT "${CMAKE_C_FLAGS_INIT} ${ARCH_DEFS}")
    set(CMAKE_CXX_FLAGS_INIT "${CMAKE_C_FLAGS_INIT} ${ARCH_DEFS}")
endif()

set(LINK_FLAGS "-nodefaultlib -errorlimit:0 -force:multiple")
set(LIBRARIES_AMD64 "clang_rt.builtins-x86_64.lib")
set(CMAKE_LINKER lld-link)
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_LINKER> ${LINK_FLAGS} <LINK_FLAGS> <OBJECTS> <LINK_LIBRARIES> ${LIBRARIES_${CMAKE_SYSTEM_PROCESSOR}} -out:<TARGET>")
set(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_LINKER> ${LINK_FLAGS} <LINK_FLAGS> <OBJECTS> <LINK_LIBRARIES> ${LIBRARIES_${CMAKE_SYSTEM_PROCESSOR}} -out:<TARGET>")
set(CMAKE_C_CREATE_SHARED_LIBRARY "<CMAKE_LINKER> ${LINK_FLAGS} <LINK_FLAGS> <OBJECTS> <LINK_LIBRARIES> ${LIBRARIES_${CMAKE_SYSTEM_PROCESSOR}} -dll -out:<TARGET>")
set(CMAKE_CXX_CREATE_SHARED_LIBRARY "<CMAKE_LINKER> ${LINK_FLAGS} <LINK_FLAGS> <OBJECTS> <LINK_LIBRARIES> ${LIBRARIES_${CMAKE_SYSTEM_PROCESSOR}} -dll -out:<TARGET>")
set(CMAKE_AR llvm-ar)

set(CMAKE_C_COMPILER_WORKS TRUE)
set(CMAKE_CXX_COMPILER_WORKS TRUE)
